// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  id          Int       @id @default(autoincrement())
  nom         String    @db.VarChar(255)
  description String?   
  createdAt   DateTime  @default(now())

  produits    CollectionProduit[]
}

model Produit {
  id          Int       @id @default(autoincrement())
  nom         String    @db.VarChar(255)
  description String?
  imgPath     String
  prix        Decimal   @db.Decimal(10,2)
  stock       Int       @default(0)
  createdAt   DateTime  @default(now())

  collections CollectionProduit[]
  commandes   CommandeProduit[]
}

model CollectionProduit {
  id           Int       @id @default(autoincrement())
  collectionId Int       
  produitId    Int       

  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade) //permet de faie la jointure facilement dans prisma
  produit      Produit    @relation(fields: [produitId], references: [id], onDelete: Cascade) //permet de faie la jointure facilement dans prisma

  @@unique([collectionId, produitId]) // Évite les doublons
}

model Commande {
  id          Int       @id @default(autoincrement())
  userId      Int?      // Peut être NULL si l'acheteur n'est pas connecté
  user        User?     @relation(fields: [userId], references: [id], onDelete: Cascade) //permet de faie la jointure facilement dans prisma


  clientEmail String?   @db.VarChar(255) // Email du client si achat sans compte

  adresse     String   @db.VarChar(255) // Nouvelle adresse du client
  codePostal  String?   @db.VarChar(20)
  ville       String?   @db.VarChar(100)
  pays        String?   @db.VarChar(100)

  total       Decimal   @db.Decimal(10,2)
  status      String    @default("en attente") @db.VarChar(50)
  createdAt   DateTime  @default(now())

  produits    CommandeProduit[]
}

model CommandeProduit {
  id           Int       @id @default(autoincrement())
  commandeId   Int       
  produitId    Int       
  quantite     Int       
  prixUnitaire Decimal   @db.Decimal(10,2)

  commande     Commande  @relation(fields: [commandeId], references: [id], onDelete: Cascade)
  produit      Produit   @relation(fields: [produitId], references: [id], onDelete: Cascade)
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String   // Stocke un hash du mot de passe
  role     Role     @default(CLIENT)

  commandes Commande[]
}

enum Role {
  CLIENT
  ADMIN
}
